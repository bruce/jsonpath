grammar JSONPathGrammar

  rule path
    root selectors:child+ <JSON::Path::RootNode>
  end

  rule root
    '$'
  end
  
  rule number
    '-'? [0-9]+
  end
  
  rule wildcard
    '*' / '\'' '*' '\''
  end
  
  rule lower
    descendant / '.'
  end
  
  rule descendant
    '..'
  end
  
  rule word_list
    quoted_word ',' ' '*  word_list
    /
    quoted_word
  end
  
  rule quoted_word
    '\'' key:(!'\'' . )+ '\''
  end
  
  rule child
    # .foo or ..foo
    lower key:bareword <JSON::Path::KeyNode>
    /
    # .* or ..*
    lower wildcard <JSON::Path::WildcardNode>
    /
    # '?(@ % 2 == 0)'
    lower '\'?(' template_code:(!')\'' . )+ ')\'' <JSON::Path::FilterNode>
    /
    # .'foo'
    lower '\'' key:(!'\'' . )+ '\'' <JSON::Path::KeyNode>
    /
    # [*] and ['*']
    '[' wildcard ']' <JSON::Path::WildcardNode>
    /
    # [0]
    '[' index:number ']' <JSON::Path::IndexNode>
    /
    # .[0] and ..[0]
    lower '[' index:number ']' <JSON::Path::IndexNode>
    /
    # [1:2]
    '[' start:number ':' stop:number ']' <JSON::Path::SliceNode>
    /
    # .[1:2] and ..[1:2]
    lower '[' start:number ':' stop:number ']' <JSON::Path::SliceNode>  
    /
    # [1:]
    '[' start:number ':]' <JSON::Path::SliceNode>
    /
    # .[1:] and ..[1:]
    lower '[' start:number ':]' <JSON::Path::SliceNode>
    /
    # [1:4:2]
    '[' start:number ':' stop:number ':' step:number ']' <JSON::Path::SliceNode>
    /
    # .[1:4:2] and ..[1:4:2]
    lower '[' start:number ':' stop:number ':' step:number ']' <JSON::Path::SliceNode>
    /
    # [1::2]
    '[' start:number '::' step:number ']' <JSON::Path::SliceNode>
    /
    # .[1::2] and ..[1::2]
    lower '[' start:number '::' step:number ']' <JSON::Path::SliceNode>
    /    
    # [(@.length - 1)]
    '[(' template_code:(!')]' . )+ ')]' <JSON::Path::ExprNode>
    /
    # .[(@.length - 1)] and ..[(@.length - 1)]
    lower '[(' template_code:(!')]' . )+ ')]' <JSON::Path::ExprNode>
    /
    # [?(@ % 2 == 0)]
    '[?(' template_code:(!')]' . )+ ')]' <JSON::Path::FilterNode>
    /
    # .[?(@ % 2 == 0)] and ..[?(@ % 2 == 0)]
    lower '[?(' template_code:(!')]' . )+ ')]' <JSON::Path::FilterNode>
    /    
    # ['foo']
    '[' word_list ']' <JSON::Path::KeyNode>
    /    
    # .['foo'] and ..['foo]
    lower '[' word_list ']' <JSON::Path::KeyNode>
  end
  
  rule bareword
    [a-zA-Z0-9]+
  end

end